# -*- coding: utf-8 -*-
"""Моделирование 5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16mlEfdYxyvIAs5eRorqmyvO8ljg-TwwD
"""

import random as rand
from matplotlib import pyplot as plt
from scipy.stats import poisson
import math

"""# **Задание 1**"""

n = 100
t = 1.5

tt1 = 2
tt2 = 1

l1 = 1/tt1
l2 = 1/tt2
pt1 =  math.exp(-l1 * t)
pt2 =  math.exp(-l2 * t)
print("Вероятность, что не откажет ни один: ", pt1 * pt2)
print("Вероятность, что откажет только второй: ", pt1 * (1 - pt2))
print("Вероятность, что все откажут: ", (1 - pt1) * (1 - pt2))
    
all_work = 0 
all_break = 0
t2_break = 0
for i in range(n):
    t1 = rand.expovariate(lambd=0.5)  # случайное число на основе экспоненциального распределения
    t2 = rand.expovariate(lambd=1)
    if t1 < t and t2 < t:
        all_break += 1
    elif t1 >= t and t2 >= t:
        all_work += 1
    elif t1 >= t and t2 < t:
        t2_break += 1

print(f'Вероятность, что не откажет ни один: {all_work / n}')
print(f'Вероятность, что откажет только второй: {t2_break / n}')
print(f'Вероятность, что все откажут: {all_break / n}')

"""# **Задание 2**"""

if __name__ == '__main__':
    lambd = 8 / 24
    m = 10
    sigma = 4
    t = 100

    train = 0
    cart = 0

    for i in range(t):
        for j in range(poisson.rvs(mu=lambd)):  # Распределение Пуассон
            train += 1
            cart += round(rand.normalvariate(m, sigma))  # нормальное распределение

    print(f'Прибыло {train} поездов за {t} часов')
    print(f'Прибыло {cart} вагонов за {t} часов')
    print(f'За сутки в среднем прибывало {train / t * 24} поездов')
    print(f'За сутки в среднем прибывало {cart / t * 24} вагонов')

"""# **Задание 3**"""

if __name__ == '__main__':
    m = 1.5
    sigma = 0.5
    t = 100

    lamb_k = 1 / m
    k = round(1 / (lamb_k ** 2 * sigma ** 2))
    lamb = lamb_k * k

    print(f'Порядок потока Эрланга: {k}')
    print(f'Интенсивность потока Эрланга: {lamb_k}')
    print(f'Интенсивность потока Пуассона: {lamb}')

    bulb = 0
    events = 0
    for i in range(t):
        events += poisson.rvs(mu=lamb)
        if events >= k:
            bulb += 1
            events -= k

    print(f'Сгорело {bulb} ломпочек за {t} лет')
    print(f'Среднее время жизни лампочки: {t / bulb}')


# -*- coding: utf-8 -*-
"""Моделирование_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KSNaiO3ogS_g5bhP-REbw9Kj24_cOtbN
"""

import random
import numpy as np

def get_count(number):
    s = str(number)
    if '.' in s:
        return abs(s.find('.') - len(s)) - 1
    else:
        return 0


pattern = [0, 1]
flag_exit = 0
while flag_exit == 0:
  z = (pattern[1] - pattern[0]) / 2
  if random.randint(0,1) == 0:
    pattern[1] -= z
    # print(0)
  else:
    pattern[0] += z
    # print(1)
  print(pattern)
  if get_count(z) == 4:
    flag_exit = 1
print("Итог: ", pattern) 
print(pattern[1])

def random_generator(initial_number=None):
  while True:
    init = initial_number
    square_str = str(round(np.power(initial_number, 2), 8)) # Возводим в квадрат и округляем до 8 символов после ,
    initial_number = float("0."+square_str[4:8])
    print("Число = ", init, " Квадрат = ", square_str)
    yield initial_number
 
 
if __name__ == "__main__":
    generator = random_generator(0.2152)
    for index, number in (zip(range(100), generator)):
        print("{0}: {1}".format(index, number))